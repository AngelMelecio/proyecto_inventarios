<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblAyuda.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        er4AAAAASUVORK5CYII=
</value>
  </data>
</root>